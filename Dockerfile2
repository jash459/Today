FROM ubuntu:latest

WORKDIR /app

COPY . /app

RUN apt-get update && apt-get install -y python3 python3-pip

CMD ["python3", "app.py"]


FROM ubuntu:latest

WORKDIR /app

COPY requirements.txt /app
COPY devops /app/devops

RUN apt-get update && \
    apt-get install -y python3 python3-pip && \
    pip install -r requirements.txt && \
    cd devops

ENTRYPOINT [ "python3" ]
CMD [ "manage.py", "runserver" , "0.0.0.0:8000" ]


FROM node:18.12.1-alpine
WORKDIR /app
ADD package.*.json /app
RUN npm install
ADD index.js /app
CMD ["node", "index.js"]



FROM ubuntu

# Set the working directory
WORKDIR /app

# Copy requirements.txt and devops directory to the container
COPY requirements.txt /app
COPY devops /app/devops

# Install Python and dependencies
RUN apt-get update && \
    apt-get install -y python3 python3-pip && \
    pip install -r requirements.txt

# Set the working directory to devops (optional)
WORKDIR /app/devops

# Define the default command to run the Django development server
ENTRYPOINT ["python3"]
CMD ["manage.py","runserver", "0.0.0.0:8000"]









FROM ubuntu:latest

# Set the working directory in the image
WORKDIR /app

# Copy the files from the host file system to the image file system
COPY . /app

# Install the necessary packages
RUN apt-get update && apt-get install -y python3 python3-pip

# Set environment variables
ENV NAME World

# Run a command to start the application
CMD ["python3", "app.py"]